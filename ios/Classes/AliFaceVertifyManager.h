// Autogenerated from Pigeon (v1.0.19), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class FaceVerResponse;

@interface FaceVerResponse : NSObject
+ (instancetype)makeWithCode:(nullable NSNumber *)code
    retCode:(nullable NSNumber *)retCode
    reason:(nullable NSString *)reason
    retCodeSub:(nullable NSString *)retCodeSub
    retMessageSub:(nullable NSString *)retMessageSub
    extInfo:(nullable NSDictionary *)extInfo
    bizData:(nullable NSString *)bizData
    deviceToken:(nullable NSString *)deviceToken
    videoFilePath:(nullable NSString *)videoFilePath;
@property(nonatomic, strong, nullable) NSNumber * code;
@property(nonatomic, strong, nullable) NSNumber * retCode;
@property(nonatomic, copy, nullable) NSString * reason;
@property(nonatomic, copy, nullable) NSString * retCodeSub;
@property(nonatomic, copy, nullable) NSString * retMessageSub;
@property(nonatomic, strong, nullable) NSDictionary * extInfo;
@property(nonatomic, copy, nullable) NSString * bizData;
@property(nonatomic, copy, nullable) NSString * deviceToken;
@property(nonatomic, copy, nullable) NSString * videoFilePath;
@end

/// The codec used by AliFaceVertifyManager.
NSObject<FlutterMessageCodec> *AliFaceVertifyManagerGetCodec(void);

@protocol AliFaceVertifyManager

- (void)initWithError:(FlutterError *_Nullable *_Nonnull)error;

- (nullable NSDictionary *)getMetaInfoWithError:(FlutterError *_Nullable *_Nonnull)error;

- (void)openFaceCertifyCertifyId:(NSString *)certifyId error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void AliFaceVertifyManagerSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<AliFaceVertifyManager> *_Nullable api);

/// The codec used by AliFaceVertifyCallBack.
NSObject<FlutterMessageCodec> *AliFaceVertifyCallBackGetCodec(void);

@interface AliFaceVertifyCallBack : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)certifyCompletionResponse:(FaceVerResponse *)response completion:(void(^)(NSError *_Nullable))completion;
@end
NS_ASSUME_NONNULL_END
